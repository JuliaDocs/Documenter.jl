language: julia

os:
  - linux
  - osx

julia:
  - 1
  - 1.4
  - 1.0
  - nightly

branches:
  only:
    - master
    - /^release-.*$/
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/

after_success:
  - if [ -f test/quietly.log ]; then cat test/quietly.log; fi
  - if [[ $TRAVIS_JULIA_VERSION = 1 ]] && [[ $TRAVIS_OS_NAME = linux ]]; then
      julia --project=coverage/ -e 'using Pkg; Pkg.instantiate();
          using Coverage; Codecov.submit(Codecov.process_folder())';
    fi

jobs:
  allow_failures:
    - julia: nightly
  include:
    - stage: "Additional tests"
      script:
        - julia --project=test/themes -e 'using Pkg; Pkg.instantiate(); Pkg.develop(PackageSpec(path=pwd()))'
        - julia --project=test/themes test/themes/themes.jl
      name: "Themes"
    - script:
      - |
        julia --project=test/examples -e '
          using Pkg
          Pkg.instantiate()
          Pkg.develop(PackageSpec(path=pwd()))
          Pkg.add(["IOCapture", "DocumenterMarkdown"])
        '
      - julia --project=test/examples test/examples/tests_latex.jl
      name: "PDF/LaTeX backend"
    - stage: "Documentation"
      script:
        - julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
        - julia --project=docs/ docs/make.jl
      name: "HTML"
      after_success: skip
    - script:
        - julia --project=docs/pdf/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
        - julia --project=docs/pdf/ docs/pdf/make.jl
      name: "PDF"
      after_success: skip
      services: docker

notifications:
  email: false
