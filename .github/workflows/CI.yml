name: CI
on:
  push:
    branches:
      - master
      - release-*
      # You can suffix the branch name with '-runci' to run the CI on that branch
      # without having to open a pull request. This is useful for long-lived branches.
      - '*/*-runci'
    tags: '*'
  pull_request:
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6'
          - '1'
          - 'nightly'
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        arch:
          - x64
        include:
          - os: ubuntu-latest
            version: '1'
            arch: x86
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
          show-versioninfo: true
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v4
        with:
          file: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Submit coverage to Coveralls
        continue-on-error: true # TODO: https://github.com/JuliaDocs/Documenter.jl/issues/2343
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: lcov.info

  latex:
    name: "PDF/LaTeX backend"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - uses: julia-actions/cache@v2
      - name: Instantiate Pkg environment
        shell: julia --color=yes --project=test/examples {0}
        run: |
          using Pkg
          Pkg.instantiate()
          Pkg.develop(PackageSpec(path=pwd()))
          Pkg.add(["IOCapture", "tectonic_jll"])
      - name: Run test/examples/tests_latex.jl
        run: julia --color=yes --project=test/examples --code-coverage test/examples/tests_latex.jl
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v4
        with:
          file: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Submit coverage to Coveralls
        continue-on-error: true # TODO: https://github.com/JuliaDocs/Documenter.jl/issues/2343
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: lcov.info
      - uses: actions/upload-artifact@v4
        with:
          name: PDFs
          path: test/examples/builds/*/*.pdf

  themes:
    name: "CSS for HTML themes"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - uses: julia-actions/cache@v2
      - name: Install dependencies
        run: make -C assets/html Manifest.toml
      - name: Verify theme CSS files
        run: julia --color=yes --project=assets/html assets/html/verify.jl

  prerender:
    name: "NodeJS for prerender"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - uses: julia-actions/cache@v2
      - run: |
          julia --project=test/prerender/ -e '
            using Pkg
            Pkg.instantiate()
            Pkg.develop(PackageSpec(path=pwd()))'
      - run: julia --color=yes --project=test/prerender --code-coverage test/prerender/prerender.jl
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v4
        with:
          file: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Submit coverage to Coveralls
        continue-on-error: true # TODO: https://github.com/JuliaDocs/Documenter.jl/issues/2343
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: lcov.info

  docs:
    name: 'Documentation: ${{ matrix.format }}'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        format:
          - html
          - pdf
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - uses: julia-actions/cache@v2
      - name: Install dependencies
        run: julia --color=yes --project=docs/ docs/instantiate.jl
      - name: Build the manual
        run: julia --color=yes --project=docs/ docs/make.jl ${{ matrix.format }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
          DOCUMENTER_LATEX_DEBUG: ${{ github.workspace }}/latex-debug-logs
      - uses: actions/upload-artifact@v4
        if: ${{ always() && matrix.format == 'pdf' }}
        with:
          name: PDF build logs
          path: ${{ github.workspace }}/latex-debug-logs

  linkcheck:
    name: "Linkcheck: online tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@latest
        with:
          version: '1'
      - name: Install dependencies
        run: julia --color=yes --project -e'using Pkg; Pkg.instantiate()'
      - name: Run online linkcheck tests
        run: julia --color=yes --project --code-coverage test/online_linkcheck.jl
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v4
        with:
          file: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Submit coverage to Coveralls
        continue-on-error: true # TODO: https://github.com/JuliaDocs/Documenter.jl/issues/2343
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: lcov.info

  linkcheck-manual:
    name: "Linkcheck: Documenter manual"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@latest
        with:
          version: '1'
      - name: Install dependencies
        run: julia --color=yes --project=docs/ docs/instantiate.jl
      - name: Build and check documentation
        run: julia --color=yes --project=docs/ docs/make.jl linkcheck

  prettier:
    name: Prettier (JS code formatting)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actionsx/prettier@v2
        with:
          args: --check .
