[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
┌ Error: doctest failure in src/softscope.md:30-48
│ 
│ ```jldoctest
│ julia> code = """
│        s = 0 # global
│        for i = 1:10
│            t = s + i # new local `t`
│            s = t # new local `s` with warning
│        end
│        s, # global
│        @isdefined(t) # global
│        """;
│ 
│ julia> include_string(Main, code)
│ ┌ Warning: Assignment to `s` in soft scope is ambiguous because a global variable by the same name exists: `s` will be treated as a new local. Disambiguate by using `local s` to suppress this warning or `global s` to assign to the existing global variable.
│ └ @ string:4
│ ERROR: LoadError: UndefVarError: s not defined
│ Stacktrace:
│  [1] top-level scope at ./string:3
│ [...]
│ ```
│ 
│ Subexpression:
│ 
│ include_string(Main, code)
│ 
│ Evaluated output:
│ 
│ ┌ Warning: Assignment to `s` in soft scope is ambiguous because a global variable by the same name exists: `s` will be treated as a new local. Disambiguate by using `local s` to suppress this warning or `global s` to assign to the existing global variable.
│ └ @ string:4
│ ERROR: LoadError: UndefVarError: `s` not defined in local scope
│ Suggestion: check for an assignment to a local variable that shadows a global of the same name.
│ Hint: a global variable of this name also exists in Main.
│ Stacktrace:
│  [1] top-level scope
│    @ ./string:3
│  [2] eval
│    @ Core ./boot.jl:426 [inlined]
│  [3] include_string(mapexpr::typeof(identity), mod::Module, code::String, filename::String)
│    @ Base ./loading.jl:2177
│  [4] include_string
│    @ Base ./loading.jl:2187 [inlined]
│  [5] include_string(m::Module, txt::String)
│    @ Base ./loading.jl:2187
│  [6] top-level scope
│    @ none:1
│ in expression starting at string:2
│ 
│ Expected output:
│ 
│ ┌ Warning: Assignment to `s` in soft scope is ambiguous because a global variable by the same name exists: `s` will be treated as a new local. Disambiguate by using `local s` to suppress this warning or `global s` to assign to the existing global variable.
│ └ @ string:4
│ ERROR: LoadError: UndefVarError: s not defined
│ Stacktrace:
│  [1] top-level scope at ./string:3
│ [...]
│ 
│   diff =
│    Warning: Diff output requires color.
│    ┌ Warning: Assignment to `s` in soft scope is ambiguous because a global variable by the same name exists: `s` will be treated as a new local. Disambiguate by using `local s` to suppress this warning or `global s` to assign to the existing global variable.
│    └ @ string:4
│    ERROR: LoadError: UndefVarError: s `s` not defined
│    defined in local scope
│    Suggestion: check for an assignment to a local variable that shadows a global of the same name.
│    Hint: a global variable of this name also exists in Main.
│    Stacktrace:
│     [1] top-level scope scope
│       @ ./string:3
│     [2] eval
│       @ Core ./boot.jl:426 [inlined]
│     [3] include_string(mapexpr::typeof(identity), mod::Module, code::String, filename::String)
│       @ Base ./loading.jl:2177
│     [4] include_string
│       @ Base ./loading.jl:2187 [inlined]
│     [5] include_string(m::Module, txt::String)
│       @ Base ./loading.jl:2187
│     [6] top-level scope
│       @ none:1
│    in expression starting at ./string:3
│    [...]string:2
└ @ Documenter src/softscope.md:30
┌ Error: doctest failure in src/softscope.md:50-67
│ 
│ ```jldoctest
│ s = 0 # global
│ for i = 1:10
│     t = s + i # new local `t`
│     s = t # new local `s` with warning
│ end
│ s, # global
│ @isdefined(t) # global
│ 
│ # output
│ 
│ ┌ Warning: Assignment to `s` in soft scope is ambiguous because a global variable by the same name exists: `s` will be treated as a new local. Disambiguate by using `local s` to suppress this warning or `global s` to assign to the existing global variable.
│ └ @ doctests.jl:3
│ ERROR: UndefVarError: s not defined
│ Stacktrace:
│  [1] doctests.jl:3 [inlined]
│ [...]
│ ```
│ 
│ Subexpression:
│ 
│ s = 0 # global
│ for i = 1:10
│     t = s + i # new local `t`
│     s = t # new local `s` with warning
│ end
│ s, # global
│ @isdefined(t) # global
│ 
│ Evaluated output:
│ 
│ ┌ Warning: Assignment to `s` in soft scope is ambiguous because a global variable by the same name exists: `s` will be treated as a new local. Disambiguate by using `local s` to suppress this warning or `global s` to assign to the existing global variable.
│ └ @ none:3
│ ERROR: UndefVarError: `s` not defined in local scope
│ Suggestion: check for an assignment to a local variable that shadows a global of the same name.
│ Hint: a global variable of this name also exists in Main.
│ Stacktrace:
│  [1] top-level scope
│    @ ./none:2
│ 
│ Expected output:
│ 
│ ┌ Warning: Assignment to `s` in soft scope is ambiguous because a global variable by the same name exists: `s` will be treated as a new local. Disambiguate by using `local s` to suppress this warning or `global s` to assign to the existing global variable.
│ └ @ doctests.jl:3
│ ERROR: UndefVarError: s not defined
│ Stacktrace:
│  [1] doctests.jl:3 [inlined]
│ [...]
│ 
│   diff =
│    Warning: Diff output requires color.
│    ┌ Warning: Assignment to `s` in soft scope is ambiguous because a global variable by the same name exists: `s` will be treated as a new local. Disambiguate by using `local s` to suppress this warning or `global s` to assign to the existing global variable.
│    └ @ doctests.jl:3
│    none:3
│    ERROR: UndefVarError: s `s` not defined
│    defined in local scope
│    Suggestion: check for an assignment to a local variable that shadows a global of the same name.
│    Hint: a global variable of this name also exists in Main.
│    Stacktrace:
│     [1] doctests.jl:3 [inlined]
│    [...]top-level scope
│       @ ./none:2
└ @ Documenter src/softscope.md:50
[ Info: ExpandTemplates: expanding markdown templates.
[ Info: CrossReferences: building cross-references.
[ Info: CheckDocument: running document checks.
[ Info: Populate: populating indices.
[ Info: RenderDocument: rendering document.
[ Info: HTMLWriter: rendering HTML pages.
